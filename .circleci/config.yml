version: 2
jobs:
  checkout_code:
    docker:
      - image: circleci/golang:1.8
    working_directory: ~/hackathon/
    steps:
      - checkout
      - save_cache:
          key: hugo-cache-{{ epoch }}
          paths:
            - ~/hackathon/

  textlint:
    docker:
      - image: circleci/node:9.2.0
    working_directory: ~/hackathon/.circleci
    steps:
      - restore_cache:
          keys:
            - hugo-cache
            - hugo-nodemodules-{{ checksum "package.json" }}
      - run:
          command: |
            npm install
            npm run textlint "../content/blog/${CIRCLE_BRANCH}.md"
      - save_cache:
          key: hugo-nodemodules-{{ checksum "package.json" }}
          paths:
            - ~/hackathon/.circleci/node_modules

  build:
    docker:
      - image: circleci/golang:1.8
    working_directory: ~/hackathon/
    steps:
      - restore_cache:
          key: hugo-cache
      - run:
          command: |
            git submodule sync
            git submodule update --init
            go get github.com/gohugoio/hugo
            rm -rf public/*
            sudo cp /usr/share/zoneinfo/Japan /etc/localtime
            hugo -D -E -F
      - save_cache:
          key: hugo-cache-public-{{ epoch }}
          paths:
            - ~/hackathon/public

  deploy:
    machine:
      enabled: true
    working_directory: ~/hackathon/
    steps:
      - restore_cache:
          key: hugo-cache-public
      - run:
          command: |
            cd ~/hackathon/
            git config --global user.name "CircleCI"
            git config --global user.email "circleci@example.com"
            git add --all
            git commit -m "${CIRCLE_BRANCH} (Circle CI)"
            git subtree add --prefix=public git@github.com:Kazunari-h/hackathon.git gh-pages --squash
            git subtree push -f --prefix=public git@github.com:Kazunari-h/hackathon.git gh-pages

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - checkout_code
      - textlint:
          filters:
            branches:
              ignore: master
          requires:
            - checkout_code
      - build:
          requires:
            - checkout_code
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - textlint
            - build